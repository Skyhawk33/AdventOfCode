v                                                                                                   ; vars:                         ;
<    v n(4"FRTH"   P:0 I (4"STRN" }nu2{{                                                            ; x0 = instructions             ;
                           v u-20\+1u1<     v00+1\$<                                                ; x?y1=left x?y2=right          ;
           v               <       $ _^#-Z' <     _^#-A':/*:*aa: p1 O\ p2  <                        ; x-1y0=first visit             ;
     >0  ~$>#v ~ 5k~ 3k$ aa**+aa**+ 4k~ $$ aa**+aa**+\: 4k~ $$ aa**+aa**+\ ^                        ;                               ;
             > 101-u v                                                                              ;                               ;
           >         >:] 1- \ 01-u                                         v                        ; stack:                        ;
             v         |#                                                  <                        ; [nodes, inst, count, pos]     ;
                        v                                                  <                        ;                               ;
             > 00G 0 1u >             R:]    \:aa*:*/ 9a* -  ]\'L`1+g \1+\ ^                        ;                               ;
                                        |                    |                                      ; 1. read in the directions as  ;
                        ^ u2 G00 u-20 $ <          v                                                ;    a str and save to line0    ;
               v               >    v              |                                                ;                               ;
               |               |:%OO< u-10*OO u2 0 ] u-10 .:R<                                      ; 2. write the nodes in space   ;
           ^   ]  u-10   /\u1 $<                                                                    ;    at their hashed position   ;
                                                                                                    ;    x=hash y=1,2               ;
                       >    a, 1u. a, @                                                             ;                               ;
                                                                                                    ; 3. keep track of all nodes    ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    that end in A for later    ;
                                                                                                    ;                               ;
           > > :] 1- \ 01-u 0 01-0p      ; TESTING LOOP ;                  v                        ; 4. for each A node, traverse  ;
             v  |#                                                         <                        ;    nodes and record the       ;
                #       v                                                  <                        ;    (node, str_len) until      ;
             > 00G 0 1u >             R:]    \:aa*:*/ 9a* -]> \'L`1+g \1+\ ^                        ;    a repeat Z node is hit.    ;
                                        |                  |                                        ;                               ;
                      v ^ u2 G00 u-20 $ < > R:01-0p RR      ^                                       ;  (based on testing, the cycle ;
                      |                   |!g0-10u3.Nu-30.:<                                        ;   length is exactly equal to  ;
           ^       ,a ]    .- .:g0-10:.:R <                                                         ;   the A to Z length, so we    ;
                                                                                                    ;   dont need to go further)    ;
                >    @                                                                              ;                               ;
                                                                                                    ; 5. find the LCM of the cycles ;
                                                                                                    ;                               ;